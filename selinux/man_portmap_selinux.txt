portmap_selinux(8)                                         SELinux Policy portmap                                        portmap_selinux(8)



NAME
       portmap_selinux - Security Enhanced Linux Policy for the portmap processes

DESCRIPTION
       Security-Enhanced Linux secures the portmap processes via flexible mandatory access control.

       The portmap processes execute with the portmap_t SELinux type. You can check if you have these processes running by executing the ps
       command with the -Z qualifier.

       For example:

       ps -eZ | grep portmap_t



ENTRYPOINTS
       The portmap_t SELinux type can be entered via the portmap_exec_t file type.

       The default entrypoint paths for the portmap_t domain are the following:

       /sbin/portmap, /usr/sbin/portmap

PROCESS TYPES
       SELinux defines process types (domains) for each process running on the system

       You can see the context of a process using the -Z option to ps

       Policy governs the access confined processes have to files.  SELinux portmap policy is very flexible allowing users to  setup  their
       portmap processes in as secure a method as possible.

       The following process types are defined for portmap:

       portmap_t, portmap_helper_t

       Note:  semanage  permissive  -a portmap_t can be used to make the process type portmap_t permissive. SELinux does not deny access to
       permissive process types, but the AVC (SELinux denials) messages are still generated.


BOOLEANS
       SELinux policy is customizable based on least access required.  portmap policy is extremely flexible and has several  booleans  that
       allow you to manipulate the policy and run portmap with the tightest access possible.



       If  you  want to allow users to resolve user passwd entries directly from ldap rather then using a sssd server, you must turn on the
       authlogin_nsswitch_use_ldap boolean. Disabled by default.

       setsebool -P authlogin_nsswitch_use_ldap 1



       If you want to allow all daemons to write corefiles to /, you must turn on the daemons_dump_core boolean. Disabled by default.

       setsebool -P daemons_dump_core 1



       If you want to enable cluster mode for daemons, you must turn on the daemons_enable_cluster_mode boolean. Disabled by default.

       setsebool -P daemons_enable_cluster_mode 1



       If you want to allow all daemons to use tcp wrappers, you must turn on the daemons_use_tcp_wrapper boolean. Disabled by default.

       setsebool -P daemons_use_tcp_wrapper 1



       If you want to allow all daemons the ability to read/write terminals, you must turn on  the  daemons_use_tty  boolean.  Disabled  by
       default.

       setsebool -P daemons_use_tty 1



       If  you  want to deny any process from ptracing or debugging any other processes, you must turn on the deny_ptrace boolean. Disabled
       by default.

       setsebool -P deny_ptrace 1



       If you want to allow any process to mmap any file on system with attribute file_type, you must  turn  on  the  domain_can_mmap_files
       boolean. Enabled by default.

       setsebool -P domain_can_mmap_files 1



       If  you  want  to  allow all domains write to kmsg_device, while kernel is executed with systemd.log_target=kmsg parameter, you must
       turn on the domain_can_write_kmsg boolean. Disabled by default.

       setsebool -P domain_can_write_kmsg 1



       If you want to allow all domains to use other domains file descriptors, you must turn  on  the  domain_fd_use  boolean.  Enabled  by
       default.

       setsebool -P domain_fd_use 1



       If  you want to allow all domains to have the kernel load modules, you must turn on the domain_kernel_load_modules boolean. Disabled
       by default.

       setsebool -P domain_kernel_load_modules 1



       If you want to allow all domains to execute in fips_mode, you must turn on the fips_mode boolean. Enabled by default.

       setsebool -P fips_mode 1



       If you want to enable reading of urandom for all domains, you must turn on the global_ssp boolean. Disabled by default.

       setsebool -P global_ssp 1



       If you want to allow confined applications to run with kerberos, you must turn on the kerberos_enabled boolean. Enabled by default.

       setsebool -P kerberos_enabled 1



       If you want to allow system to run with NIS, you must turn on the nis_enabled boolean. Disabled by default.

       setsebool -P nis_enabled 1



       If you want to allow confined applications to use nscd shared memory, you must turn on the nscd_use_shm boolean. Enabled by default.

       setsebool -P nscd_use_shm 1



PORT TYPES
       SELinux defines port types to represent TCP and UDP ports.

       You can see the types associated with a port by using the following command:

       semanage port -l


       Policy governs the access confined processes have to these ports.  SELinux portmap policy is very flexible allowing users  to  setup
       their portmap processes in as secure a method as possible.

       The following port types are defined for portmap:


       portmap_port_t



       Default Defined Ports:
                 tcp 111
                 udp 111

MANAGED FILES
       The  SELinux  process type portmap_t can manage files labeled with the following file types.  The paths listed are the default paths
       for these file types.  Note the processes UID still need to have DAC permissions.

       cluster_conf_t

            /etc/cluster(/.*)?

       cluster_var_lib_t

            /var/lib/pcsd(/.*)?
            /var/lib/cluster(/.*)?
            /var/lib/openais(/.*)?
            /var/lib/pengine(/.*)?
            /var/lib/corosync(/.*)?
            /usr/lib/heartbeat(/.*)?
            /var/lib/heartbeat(/.*)?
            /var/lib/pacemaker(/.*)?

       cluster_var_run_t

            /var/run/crm(/.*)?
            /var/run/cman_.*
            /var/run/rsctmp(/.*)?
            /var/run/aisexec.*
            /var/run/heartbeat(/.*)?
            /var/run/corosync-qnetd(/.*)?
            /var/run/corosync-qdevice(/.*)?
            /var/run/cpglockd.pid
            /var/run/corosync.pid
            /var/run/rgmanager.pid
            /var/run/cluster/rgmanager.sk

       portmap_tmp_t


       portmap_var_run_t

            /var/run/portmap_mapping
            /var/run/portmap.upgrade-state

       root_t

            /sysroot/ostree/deploy/.*-atomic.*/deploy(/.*)?
            /
            /initrd


FILE CONTEXTS
       SELinux requires files to have an extended attribute to define the file type.

       You can see the context of a file using the -Z option to ls

       Policy governs the access confined processes have to these files.  SELinux portmap policy is very flexible allowing users  to  setup
       their portmap processes in as secure a method as possible.

       STANDARD FILE CONTEXT

       SELinux  defines  the file context types for the portmap, if you wanted to store files with these types in a diffent paths, you need
       to execute the semanage command to sepecify alternate labeling and then use restorecon to put the labels on disk.

       semanage fcontext -a -t portmap_var_run_t '/srv/myportmap_content(/.*)?'
       restorecon -R -v /srv/myportmap_content

       Note: SELinux often uses regular expressions to specify labels that match multiple files.

       The following file types are defined for portmap:



       portmap_exec_t

       - Set files with the portmap_exec_t type, if you want to transition an executable to the portmap_t domain.


       Paths:
            /sbin/portmap, /usr/sbin/portmap


       portmap_helper_exec_t

       - Set files with the portmap_helper_exec_t type, if you want to transition an executable to the portmap_helper_t domain.


       Paths:
            /sbin/pmap_set, /sbin/pmap_dump, /usr/sbin/pmap_set, /usr/sbin/pmap_dump


       portmap_initrc_exec_t

       - Set files with the portmap_initrc_exec_t type, if you want to transition an executable to the portmap_initrc_t domain.



       portmap_tmp_t

       - Set files with the portmap_tmp_t type, if you want to store portmap temporary files in the /tmp directories.



       portmap_var_run_t

       - Set files with the portmap_var_run_t type, if you want to store the portmap files under the /run or /var/run directory.


       Paths:
            /var/run/portmap_mapping, /var/run/portmap.upgrade-state


       Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you  need
       to use the semanage fcontext command.  This will modify the SELinux labeling database.  You will need to use restorecon to apply the
       labels.


COMMANDS
       semanage fcontext can also be used to manipulate default file context mappings.

       semanage permissive can also be used to manipulate whether or not a process type is permissive.

       semanage module can also be used to enable/disable/install/remove policy modules.

       semanage port can also be used to manipulate the port definitions

       semanage boolean can also be used to manipulate the booleans


       system-config-selinux is a GUI tool available to customize SELinux policy settings.


AUTHOR
       This manual page was auto-generated using sepolicy manpage .


SEE ALSO
       selinux(8),   portmap(8),   semanage(8),   restorecon(8),   chcon(1),   sepolicy(8)   ,   setsebool(8),   portmap_helper_selinux(8),
       portmap_helper_selinux(8)



portmap                                                           20-09-13                                               portmap_selinux(8)
